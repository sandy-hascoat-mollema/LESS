.ixp-labs() {
    -ixp-experimental: "true";
}
.ixp-default() {
    -ixp-default: "true";
}

.clearfix() {
  zoom: 1;
  &:before { content: ''; display: block; }
  &:after { content: ''; display: table; clear: both; }
}

.border-radius(@radius:4px) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
      -ms-border-radius: @radius;
       -o-border-radius: @radius;
          border-radius: @radius;
}

.transition(@transition:all 0.3s ease) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}


.transform(@transform) {
  -webkit-transform: @transform;
     -moz-transform: @transform;
      -ms-transform: @transform;
       -o-transform: @transform;
          transform: @transform;
}

.transform-style(@style) {
  -webkit-transform-style: @style;
     -moz-transform-style: @style;
      -ms-transform-style: @style;
          transform-style: @style;
}

.user-select(@select) {
  -webkit-user-select: @select;
     -moz-user-select: @select;
      -ms-user-select: @select;
       -o-user-select: @select;
          user-select: @select;
}

.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
     -moz-box-shadow: @shadow;
          box-shadow: @shadow;
}

.transitions(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}

.gradient-background(@startColor, @endColor, @start:0, @end:100%) {
  background: @startColor;
  background: -moz-linear-gradient(top, @startColor @start, @endColor @end);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(@start, @startColor), color-stop(@end, @endColor));
  background: -webkit-linear-gradient(top, @startColor @start, @endColor @end);
  background: -o-linear-gradient(top, @startColor @start, @endColor @end);
  background: -ms-linear-gradient(top, @startColor @start, @endColor @end);
  background: linear-gradient(to bottom, @startColor @start, @endColor @end);
}

.gradient-background-horizontal(@startColor, @endColor, @start:0, @end:100%) {
  background: @startColor;
  background: -moz-linear-gradient(left, @startColor @start, @endColor @end);
  background: -webkit-gradient(linear, left top, right top, color-stop(@start, @startColor), color-stop(@end, @endColor));
  background: -webkit-linear-gradient(left, @startColor @start, @endColor @end);
  background: -o-linear-gradient(left, @startColor @start, @endColor @end);
  background: -ms-linear-gradient(left, @startColor @start, @endColor @end);
  background: linear-gradient(to right, @startColor @start, @endColor @end);
}

.gradient-url(@url, @startColor, @endColor, @start:0, @end:100%) {
  background: @startColor;
  background: @url, -moz-linear-gradient(top, @startColor @start, @endColor @end);
  background: @url, -webkit-gradient(linear, left top, left bottom, color-stop(@start, @startColor), color-stop(@end, @endColor));
  background: @url, -webkit-linear-gradient(top, @startColor @start, @endColor @end);
  background: @url, -o-linear-gradient(top, @startColor @start, @endColor @end);
  background: @url, -ms-linear-gradient(top, @startColor @start, @endColor @end);
  background: @url, linear-gradient(to bottom, @startColor @start, @endColor @end);
}

.gradient-background-multilayer(@startColor, @midStartColor, @midEndColor, @endColor, @start:0, @midStart:4%, @midEnd: 96%, @end:100%) {
  background: @startColor;
  background: -moz-linear-gradient(top, @startColor @start, @midStartColor @midStart, @midEndColor @midEnd, @endColor @end);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(@start, @startColor), color-stop(@midStart, @midStartColor), color-stop(@midEnd, @midEndColor), color-stop(@end, @endColor));
  background: -webkit-linear-gradient(top, @startColor @start, @midStartColor @midStart, @midEndColor @midEnd, @endColor @end);
  background: -o-linear-gradient(top, @startColor @start, @midStartColor @midStart, @midEndColor @midEnd, @endColor @end);
  background: -ms-linear-gradient(top, @startColor @start, @midStartColor @midStart, @midEndColor @midEnd, @endColor @end);
  background: linear-gradient(to bottom, @startColor @start, @midStartColor @midStart, @midEndColor @midEnd, @endColor @end);
}

.filter-gradient(@color-1, @color-2, @border-style: ~'1px solid transparent') {
  background: transparent;
  border: @border-style;
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(StartColorStr=%a, EndColorStr=%a, GradientType=0)", argb(@color-1), argb(@color-2))); // gradient BG
  zoom: 1;
}

.filter-gradient-border(@border-color, @color-1, @color-2) {
  background: transparent;
  border: 1px solid @border-color;
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(StartColorStr=%a, EndColorStr=%a, GradientType=0)", argb(@color-1), argb(@color-2))); // gradient BG
  zoom: 1;
}

.placeholder(@color) {
  &:-moz-placeholder { // deprecated
    color: @color;
  }
  &::-moz-placeholder { // new
    color: @color;
  }
  &::-webkit-input-placeholder {
    color: @color;
  }
  &:-ms-input-placeholder {
    color: @color;
  }
}

.appearance(@style) {
  -webkit-appearance: @style;
     -moz-appearance: @style;
          appearance: @style;
}

.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
     -moz-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}

.opacity(@opacity) {
  opacity: @opacity / 100;
  filter: ~"alpha(opacity=@{opacity})";
}

.icon(@icon, @iconPos) {
  background: url(@icon) @iconPos no-repeat;
}

.bg-dark(@fade) {
  background-color: fade(#000000, @fade);
}

.bg-light(@fade) {
  background-color: fade(#FFFFFF, @fade);
}

.pseudo(@content: "") {
  content: @content;
  display: block;
  position: absolute;
}

.box-sizing(@type) {
  -webkit-box-sizing: @type;
  -moz-box-sizing: @type;
  box-sizing: @type;
}

.backface-visibility(@style) {
  -webkit-backface-visibility: @style;
     -moz-backface-visibility: @style;
      -ms-backface-visibility: @style;
          backface-visibility: @style;
}

.perspective(@style) {
  -webkit-perspective: @style;
     -moz-perspective: @style;
      -ms-perspective: @style;
          perspective: @style;
}

// removes default mobile element highlight on buttons
.touch-remove() {
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-tap-highlight-color: transparent; // For some Androids
}

// experimental feature (not yet supported)
.viewport(@width: device-width, @zoom: fixed) {
  @-ms-viewport {
    width: device-width;
    user-zoom: fixed;
  }
  @-o-viewport {
    width: device-width;
    user-zoom: fixed;
  }
  @viewport {
    width: device-width;
    user-zoom: fixed;
  }
}

// font reset
.font(@family: false, @size: inherit) {
  & when not (@family = false) {
    font-family:  @family;
  }

  font-size: @size;
}

// ======================================
//	Font Render Smoothing
//
//  1. color: match font color (creates subtle edge blur)
//  2. don't apply text shadow on same element outside of mixin
//  3. only works on mac osx
// ======================================
//.font-smoothing(@color, @opacity: .004, @secondary-shadow: false) {
//  -webkit-font-smoothing: antialiased;
//  -moz-osx-font-smoothing: grayscale;
//
//  @set-color: rgba(red(@color), green(@color), blue(@color), @opacity);
//
//  & when not (@secondary-shadow = false) {
//    text-shadow: 1px 1px 1px @set-color, @secondary-shadow;
//  }
//  & when (@secondary-shadow = false) {
//    text-shadow: 1px 1px 1px @set-color);
//  }
//}

.font-smoothing(@color, @secondary-shadow: false) {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  & when not (@secondary-shadow = false) {
    text-shadow: 1px 1px 1px rgba(@color,@color,@color, 0.004), @secondary-shadow;
  }
  & when (@secondary-shadow = false) {
    text-shadow: 1px 1px 1px rgba(@color,@color,@color, 0.004);
  }
}

// =======================================
//  form sprite
//
//  @@includeMediaQuery: false, for when
//  sprite is already inside a media query
// =======================================
.sprite(@x, @y, @opacity: 100, @top: false, @right: false, @bottom: false, @left: false, @includeMediaQuery: true) {
  &:before {
    @icon-size:    12px;
    @sprite-size:  (@icon-size * 2) (@icon-size * 2); // width & height of non-retina sprite

    .pseudo();
    .opacity(@opacity);
    width: @icon-size;
    height: @icon-size;

    & when not (@top    = false)  { top:    unit(@top,    px); }
    & when not (@right  = false)  { right:  unit(@right,  px); }
    & when not (@bottom = false)  { bottom: unit(@bottom, px); }
    & when not (@left   = false)  { left:   unit(@left,   px); }

    background-image: url('@{form-image-path}sprite.png');
    background-position: unit(@x, px) unit(@y, px);

    & when (@includeMediaQuery = true) {
      @media @retina {
        background-image: url('@{form-image-path}sprite@2x.png');
        background-size: @sprite-size;
      }
    }

    & when (@includeMediaQuery = false) {
      background-image: url('@{form-image-path}sprite@2x.png');
      background-size: @sprite-size;
    }
  }
}

